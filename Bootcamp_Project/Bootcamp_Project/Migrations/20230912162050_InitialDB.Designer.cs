// <auto-generated />
using System;
using Bootcamp_Project.EF_Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bootcamp_Project.Migrations
{
    [DbContext(typeof(EF_DataContext))]
    [Migration("20230912162050_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bootcamp_Project.EF_Core.FeedbackDetails.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("comments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("createdDate")
                        .HasColumnType("bigint");

                    b.Property<int>("orderId")
                        .HasColumnType("integer");

                    b.Property<int>("rating")
                        .HasColumnType("integer");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<long>("updatedDate")
                        .HasColumnType("bigint");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("orderId");

                    b.HasIndex("userId");

                    b.ToTable("feedback");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.PaymentMethodDetails.PaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("createdDate")
                        .HasColumnType("bigint");

                    b.Property<int>("paymentTypeId")
                        .HasColumnType("integer");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<long>("updatedDate")
                        .HasColumnType("bigint");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("paymentTypeId");

                    b.HasIndex("userId");

                    b.ToTable("paymentMethod");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.PaymentMethodDetails.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("createdDate")
                        .HasColumnType("bigint");

                    b.Property<int>("paymentMethod")
                        .HasColumnType("integer");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<long>("updatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("paymentType");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.PaymentMethodDetails.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("createdDate")
                        .HasColumnType("bigint");

                    b.Property<int>("orderId")
                        .HasColumnType("integer");

                    b.Property<int>("paymentMethodId")
                        .HasColumnType("integer");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<int>("transactionStatus")
                        .HasColumnType("integer");

                    b.Property<long>("updatedDate")
                        .HasColumnType("bigint");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("orderId");

                    b.HasIndex("paymentMethodId");

                    b.HasIndex("userId");

                    b.ToTable("transaction");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.ProductDetails.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("createdDate")
                        .HasColumnType("bigint");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<long>("updatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("category");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.ProductDetails.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("SKU")
                        .HasColumnType("uuid");

                    b.Property<int>("categoryId")
                        .HasColumnType("integer");

                    b.Property<long>("createdDate")
                        .HasColumnType("bigint");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<string>("productImage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<long>("updatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("categoryId");

                    b.ToTable("product");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.ShoppingDetails.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("createdDate")
                        .HasColumnType("bigint");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<long>("updatedDate")
                        .HasColumnType("bigint");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.ShoppingDetails.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("cartId")
                        .HasColumnType("integer");

                    b.Property<long>("createdDate")
                        .HasColumnType("bigint");

                    b.Property<int>("productId")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<long>("updatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("cartId");

                    b.HasIndex("productId");

                    b.ToTable("cartItem");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.ShoppingDetails.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("addressId")
                        .HasColumnType("integer");

                    b.Property<long>("createdDate")
                        .HasColumnType("bigint");

                    b.Property<int>("orderStatus")
                        .HasColumnType("integer");

                    b.Property<int>("paymentMethodId")
                        .HasColumnType("integer");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<decimal>("totalAmount")
                        .HasColumnType("numeric");

                    b.Property<long>("updatedDate")
                        .HasColumnType("bigint");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("addressId");

                    b.HasIndex("paymentMethodId");

                    b.HasIndex("userId");

                    b.ToTable("order");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.ShoppingDetails.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("createdDate")
                        .HasColumnType("bigint");

                    b.Property<int>("orderId")
                        .HasColumnType("integer");

                    b.Property<int>("productId")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<long>("updatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("orderId");

                    b.HasIndex("productId");

                    b.ToTable("orderItem");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.UserDetails.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("addressLine1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("addressLine2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("createdDate")
                        .HasColumnType("bigint");

                    b.Property<string>("landmark")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("postalCode")
                        .HasColumnType("integer");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<long>("updatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("address");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.UserDetails.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("createdDate")
                        .HasColumnType("bigint");

                    b.Property<int>("phoneNumber")
                        .HasColumnType("integer");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<long>("updatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.UserDetails.User_Address", b =>
                {
                    b.Property<int>("userid")
                        .HasColumnType("integer");

                    b.Property<int>("addressid")
                        .HasColumnType("integer");

                    b.Property<long>("createdDate")
                        .HasColumnType("bigint");

                    b.Property<bool>("isDefault")
                        .HasColumnType("boolean");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.Property<long>("updatedDate")
                        .HasColumnType("bigint");

                    b.HasKey("userid", "addressid");

                    b.HasIndex("addressid");

                    b.ToTable("userAddress");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.FeedbackDetails.Feedback", b =>
                {
                    b.HasOne("Bootcamp_Project.EF_Core.ShoppingDetails.Order", "order")
                        .WithMany()
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bootcamp_Project.EF_Core.UserDetails.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.PaymentMethodDetails.PaymentMethod", b =>
                {
                    b.HasOne("Bootcamp_Project.EF_Core.PaymentMethodDetails.PaymentType", "paymentType")
                        .WithMany()
                        .HasForeignKey("paymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bootcamp_Project.EF_Core.UserDetails.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("paymentType");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.PaymentMethodDetails.Transaction", b =>
                {
                    b.HasOne("Bootcamp_Project.EF_Core.ShoppingDetails.Order", "order")
                        .WithMany()
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bootcamp_Project.EF_Core.PaymentMethodDetails.PaymentMethod", "paymentMethod")
                        .WithMany()
                        .HasForeignKey("paymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bootcamp_Project.EF_Core.UserDetails.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("paymentMethod");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.ProductDetails.Product", b =>
                {
                    b.HasOne("Bootcamp_Project.EF_Core.ProductDetails.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.ShoppingDetails.Cart", b =>
                {
                    b.HasOne("Bootcamp_Project.EF_Core.UserDetails.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.ShoppingDetails.CartItem", b =>
                {
                    b.HasOne("Bootcamp_Project.EF_Core.ShoppingDetails.Cart", "cart")
                        .WithMany()
                        .HasForeignKey("cartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bootcamp_Project.EF_Core.ProductDetails.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cart");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.ShoppingDetails.Order", b =>
                {
                    b.HasOne("Bootcamp_Project.EF_Core.UserDetails.Address", "address")
                        .WithMany()
                        .HasForeignKey("addressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bootcamp_Project.EF_Core.PaymentMethodDetails.PaymentMethod", "paymentMethod")
                        .WithMany()
                        .HasForeignKey("paymentMethodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bootcamp_Project.EF_Core.UserDetails.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("address");

                    b.Navigation("paymentMethod");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.ShoppingDetails.OrderItem", b =>
                {
                    b.HasOne("Bootcamp_Project.EF_Core.ShoppingDetails.Order", "order")
                        .WithMany()
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bootcamp_Project.EF_Core.ProductDetails.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");

                    b.Navigation("product");
                });

            modelBuilder.Entity("Bootcamp_Project.EF_Core.UserDetails.User_Address", b =>
                {
                    b.HasOne("Bootcamp_Project.EF_Core.UserDetails.Address", "address")
                        .WithMany()
                        .HasForeignKey("addressid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bootcamp_Project.EF_Core.UserDetails.User", "user")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("address");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
